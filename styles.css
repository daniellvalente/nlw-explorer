@charset "UTF-8";

/* CONFIG GERAIS
Resetando confirações do navegador*/
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body * {
    font-family: 'Inter', sans-serif;
    line-height: 160%;
}

/*vai aplicar as configuraçoes em todas as tags filhas
body * {
    border: 1px solid red;
}
*/

ul {
    list-style: none;
}


/*CONFIG DE ESTILO*/
body {
    background-image: url(./assets/bg.jpg);
    /* posicionamento do fundo(da imagem do fundo) que sera no topo e centralizado*/
    background-position: top center;
    /* o tamanho vai aumentar,  100% vai ser a largura disponivel da tela e o auto vai ser a altura vai ser automatica*/
    background-size: 100% auto;
    background-repeat: no-repeat;
    background-color: #121214;
}

header{
    max-width: 580px;
    margin: auto;
    /*text-align alinha tudo que ele entende como propriedade de texto, a img é uma propriedade de texto, se nao alinhar é pq nao tem propriedades de texto*/
    padding-top: 32px;
    /*faz o css fazer o calculo para, no caso para calular a altura com o padding*/
    height: calc(120px + 32px);
  
}

header div {
    width: 120px;
    margin: auto;
    background-image: linear-gradient(90deg, #9572FC 0%, #43E7AD 50.52%, #E2D45C 100%);

    border-radius: 50%;

    display: flex;
    /*vai expandir a caixa em 4px e vai vazar da imagem*/
    padding: 4px;
    transition: transform .2s;
}

header div:hover {
    transform: scale(1.1);
}

header div img {
    width: 100%;
    border-radius: 50%;

}

main {
    max-width: 580px;
    /* 90% da largura do main*/
    width: 90%;
    margin: 32px auto;

/* uma forma  
    display: flex;
    flex-direction: column;
    ou  
    display: grid;
    aqui vai gerar o mesmo resultado
*/
    display: grid;
    gap: 24px;

    
}

section {
    color: white;

    background-image: linear-gradient(90deg, #9572FC 0%, #43E7AD 50.52%, #E2D45C 100%);
    padding-top: 4px;
    border-radius: 10px;
}

section div {
    background-color: #2A2634;
    padding: 23px;
    padding-top: 24px;
    border-radius: 8px;

    
}

section h2 {
    letter-spacing: -0.47px;
}

section p {
    letter-spacing: -0.18px;
    color: #A1A1AA;
}

/*display tem haver com a visualizacao das caxias:
    block: bloqueia linha inteira e joga o proximo elemento par baixo
    inline: uma parte da linha e proximo fica ao lado  na mesma linha
    flex: muda o comportada das caixas que estao dentro dela(filhas)
    gap: distrancia entre as caixas filhas, so funciona quando tem o flex
    flex-wrap: wrap ;quando tiver mais elemnentes ele vai colocar na proxima linha e vai manter a caixa do mesmo tamanho
*/

section ul {
    display: flex;
    flex-wrap: wrap;
    gap: 16px;

    margin-top: 24px;
}

section ul li {
    transition: transform .2s;
}

section ul li:hover {
    transform: scale(1.1);

}

ul.games-list img {
    border-radius: 8px;
    width: 90px;
}

ul.channel-list img {
    border-radius: 50%;
    width: 70px;
    border: 1px solid #443E54;
}

/*Aplicando a animção*/
header div {
    /*precisa pelo menos de duas prorpriedades: nome e tempo. 
    A propriedade backwards vai puxar as configuraçoes do from, definida na animação e executar*/
    animation: fromTop .7s backwards;
    /*aguarda 1 segundo para inciar a a nimação*/
    animation-delay: .2s;
}

main section {
    animation: fromBottom .7s backwards;
}
/*Main pega o section filho numero (1) 
 o primeiro filho*/
main section:nth-child(1) {
    animation-delay: 0;
}
/*Main pega o section filho numero (2) 
 o segundo filho*/
main section:nth-child(2) {
    animation-delay: .4s;
}
/*Main pega o section filho numero (3) 
 o terceiro filho*/
main section:nth-child(3) {
    animation-delay: .8s;
}


/*Definindo a animaçao fromTop*/
@keyframes fromTop {
    from {
        opacity: 0;
        transform: translateY(-30px);
    }

    to {
        opacity: 1;
        transform: translateY(0);
    }
}

@keyframes fromBottom {
    0% {
        opacity: 0;
        transform: translateX(30px);  
    }

    100% {
        opacity: 1;
        transform: translateX(0);
    }
}



/* animation
 
@keyframes - vai dar inicio a animaçao
fromTop - nome escolhido para nossa animacao que sera de cima pra baixo
from ou 0% - vai ser o inicio 
to ou 100% - vai ser onde termina
translateY() - vai percorer o eixo y(vertical)
opacity - vai fazer aparecer no 0(nao visivel) para 1(totalmente visivel)

posião atual do elemento: sera onde ele esta no momento, onde ele esta agora é a posicao 0.

DEFINICAO DA AMINAÇÂO
@keyframes fromTop {
    from {}

    to{}
}
ou
@keyframes formTop {
    0% {}

    100% {}
}
*/